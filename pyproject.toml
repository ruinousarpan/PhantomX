[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "phantomx"
version = "0.1.0"
description = "AI-powered fee prediction system for blockchain transactions"
readme = "README.md"
requires-python = ">=3.13"
license = { text = "MIT" }
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
dependencies = [
    "pandas>=2.2.1",
    "numpy>=1.26.4",
    "pydantic>=2.6.3",
    "scikit-learn>=1.4.1",
    "web3>=6.15.1",
    "fastapi>=0.110.0",
    "uvicorn>=0.27.1",
    "python-dotenv>=1.0.1",
    "requests>=2.31.0",
    "pytest>=8.0.2",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.23.5",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "hypothesis>=6.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src --cov-report=term-missing"
env = [
    "PYTHONPATH=.",
]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.ruff]
line-length = 100
target-version = "py38"
select = ["E", "F", "B", "I"]
ignore = ["E501"]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "**/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
] 