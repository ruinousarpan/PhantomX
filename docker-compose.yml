version: '3.8'

services:
  blockchain-node:
    build:
      context: ./blockchain-node
      dockerfile: Dockerfile
    ports:
      - "8545:8545"
    volumes:
      - blockchain_data:/data
    networks:
      - phantomx_network

  wallet-ui:
    build:
      context: ./wallet-ui
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - blockchain-node
      - api-gateway
    networks:
      - phantomx_network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    depends_on:
      - blockchain-node
    networks:
      - phantomx_network

  ai-core:
    build:
      context: ./python-ai-core
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ai_models:/models
    networks:
      - phantomx_network

  vpn-node:
    build:
      context: ./phantomx-vpn/node
      dockerfile: Dockerfile
    ports:
      - "51820:51820/udp"
    cap_add:
      - NET_ADMIN
    volumes:
      - vpn_config:/etc/wireguard
    networks:
      - phantomx_network

  fee_prediction:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./models:/app/models
    environment:
      - MODEL_DIR=/app/models
      - LOG_LEVEL=INFO
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Add monitoring service
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  blockchain_data:
  ai_models:
  vpn_config:
  prometheus_data:
  grafana_data:

networks:
  phantomx_network:
    driver: bridge 